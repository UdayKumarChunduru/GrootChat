// Generated by view binder compiler. Do not edit!
package com.v.grootchat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.hbb20.CountryCodePicker;
import com.v.grootchat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhoneBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText EnterPhoneNumber;

  @NonNull
  public final ImageView PhoneNextArrow;

  @NonNull
  public final TextInputLayout TIL1;

  @NonNull
  public final CountryCodePicker ccp;

  @NonNull
  public final TextView heading2;

  @NonNull
  public final TextView headingdes2;

  @NonNull
  public final LinearLayout ll1;

  @NonNull
  public final ProgressBar progressBar;

  private ActivityPhoneBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText EnterPhoneNumber, @NonNull ImageView PhoneNextArrow,
      @NonNull TextInputLayout TIL1, @NonNull CountryCodePicker ccp, @NonNull TextView heading2,
      @NonNull TextView headingdes2, @NonNull LinearLayout ll1, @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.EnterPhoneNumber = EnterPhoneNumber;
    this.PhoneNextArrow = PhoneNextArrow;
    this.TIL1 = TIL1;
    this.ccp = ccp;
    this.heading2 = heading2;
    this.headingdes2 = headingdes2;
    this.ll1 = ll1;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_phone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhoneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.EnterPhoneNumber;
      TextInputEditText EnterPhoneNumber = rootView.findViewById(id);
      if (EnterPhoneNumber == null) {
        break missingId;
      }

      id = R.id.PhoneNextArrow;
      ImageView PhoneNextArrow = rootView.findViewById(id);
      if (PhoneNextArrow == null) {
        break missingId;
      }

      id = R.id.TIL1;
      TextInputLayout TIL1 = rootView.findViewById(id);
      if (TIL1 == null) {
        break missingId;
      }

      id = R.id.ccp;
      CountryCodePicker ccp = rootView.findViewById(id);
      if (ccp == null) {
        break missingId;
      }

      id = R.id.heading2;
      TextView heading2 = rootView.findViewById(id);
      if (heading2 == null) {
        break missingId;
      }

      id = R.id.headingdes2;
      TextView headingdes2 = rootView.findViewById(id);
      if (headingdes2 == null) {
        break missingId;
      }

      id = R.id.ll1;
      LinearLayout ll1 = rootView.findViewById(id);
      if (ll1 == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      return new ActivityPhoneBinding((ConstraintLayout) rootView, EnterPhoneNumber, PhoneNextArrow,
          TIL1, ccp, heading2, headingdes2, ll1, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
