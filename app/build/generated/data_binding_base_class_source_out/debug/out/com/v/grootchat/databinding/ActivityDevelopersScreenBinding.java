// Generated by view binder compiler. Do not edit!
package com.v.grootchat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.v.grootchat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDevelopersScreenBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialCardView CV1;

  @NonNull
  public final MaterialCardView CV2;

  @NonNull
  public final MaterialCardView CV3;

  @NonNull
  public final TextView Head;

  @NonNull
  public final LinearLayout LL1;

  @NonNull
  public final TextView TV1;

  private ActivityDevelopersScreenBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialCardView CV1, @NonNull MaterialCardView CV2, @NonNull MaterialCardView CV3,
      @NonNull TextView Head, @NonNull LinearLayout LL1, @NonNull TextView TV1) {
    this.rootView = rootView;
    this.CV1 = CV1;
    this.CV2 = CV2;
    this.CV3 = CV3;
    this.Head = Head;
    this.LL1 = LL1;
    this.TV1 = TV1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDevelopersScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDevelopersScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_developers_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDevelopersScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CV1;
      MaterialCardView CV1 = rootView.findViewById(id);
      if (CV1 == null) {
        break missingId;
      }

      id = R.id.CV2;
      MaterialCardView CV2 = rootView.findViewById(id);
      if (CV2 == null) {
        break missingId;
      }

      id = R.id.CV3;
      MaterialCardView CV3 = rootView.findViewById(id);
      if (CV3 == null) {
        break missingId;
      }

      id = R.id.Head;
      TextView Head = rootView.findViewById(id);
      if (Head == null) {
        break missingId;
      }

      id = R.id.LL1;
      LinearLayout LL1 = rootView.findViewById(id);
      if (LL1 == null) {
        break missingId;
      }

      id = R.id.TV1;
      TextView TV1 = rootView.findViewById(id);
      if (TV1 == null) {
        break missingId;
      }

      return new ActivityDevelopersScreenBinding((RelativeLayout) rootView, CV1, CV2, CV3, Head,
          LL1, TV1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
